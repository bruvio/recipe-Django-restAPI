name: Django CI

on:
  push:
    branches: [ master, before ]
  pull_request:
    branches: [ master,before ]

jobs:
  django-test:

    runs-on: ubuntu-latest
    if: "!contains(github.event.commits[0].message, '[skip ci]')"
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7, 3.8, 3.9]
    services:
      db:
        image: postgres:12.3-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: github_actions
        ports:
          - 5432:5432
        options: --mount type=tmpfs,destination=/var/lib/postgresql/data --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: psycopg2 prerequisites
      run: sudo apt-get install libpq-dev
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Run make migrations
      run: |
        python manage.py makemigrations core
      env:
          SYSTEM_ENV: GITHUB_WORKFLOW
          DJANGO_SETTINGS_MODULE: recipes.settings
          ADMIN: ${{ secrets.ADMIN }}
          ADMIN_EMAIL: ${{ secrets.ADMIN_EMAIL }}
          ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}

    - name: Run migrations
      run: python manage.py migrate
      env:
          SYSTEM_ENV: GITHUB_WORKFLOW
          DJANGO_SETTINGS_MODULE: recipes.settings
          ADMIN: ${{ secrets.ADMIN }}
          ADMIN_EMAIL: ${{ secrets.ADMIN_EMAIL }}
          ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}

    - name: create superuser
      run: python manage.py createsu
      env:
          SYSTEM_ENV: GITHUB_WORKFLOW
          DJANGO_SETTINGS_MODULE: recipes.settings
          ADMIN: ${{ secrets.ADMIN }}
          ADMIN_EMAIL: ${{ secrets.ADMIN_EMAIL }}
          ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}

    - name: Run Tests
      run: |
        pytest -s -v --durations=0 --cov=. -m "not skip_in_ci"
      env:
          SYSTEM_ENV: GITHUB_WORKFLOW
          DJANGO_SETTINGS_MODULE: recipes.settings
          ADMIN: ${{ secrets.ADMIN }}
          ADMIN_EMAIL: ${{ secrets.ADMIN_EMAIL }}
          ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
  lint:
    runs-on: ubuntu-latest
    if: "!contains(github.event.commits[0].message, '[skip ci]')"
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7, 3.8, 3.9]
    steps:
    - name: Lint with flake8
      run: |
        python -m pip install --upgrade pip
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
